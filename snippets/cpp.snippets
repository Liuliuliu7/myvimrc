## STL Collections
# std::array
snippet array
	array<${1:T}, ${2:N}> ${3};${0}
# std::vector

snippet vector
	vector<${1:T}> ${2};${0}

# std::deque
snippet deque
	deque<${1:T}> ${2};${0}

# std::forward_list
snippet flist
	forward_list<${1:T}> ${2};${0}

# std::list
snippet list
	list<${1:T}> ${2};${0}

# std::set
snippet set
	set<${1:T}> ${2};${0}

# std::map
snippet map
	map<${1:Key}, ${2:T}> ${3};${0}

# std::multiset
snippet mset
	multiset<${1:T}> ${2};${0}

# std::multimap
snippet mmap
	multimap<${1:Key}, ${2:T}> ${3};${0}

# std::unordered_set
snippet uset
	unordered_set<${1:T}> ${2};${0}

# std::unordered_map
snippet umap
	unordered_map<${1:Key}, ${2:T}> ${3};${0}

# std::unordered_multiset
snippet umset
	unordered_multiset<${1:T}> ${2};${0}

# std::unordered_multimap
snippet ummap
	unordered_multimap<${1:Key}, ${2:T}> ${3};${0}

# std::stack
snippet stack
	stack<${1:T}> ${2};${0}

# std::queue
snippet queue
	queue<${1:T}> ${2};${0}

# std::priority_queue
snippet pqueue
	priority_queue<${1:T}> ${2};${0}

## Input/Output
# std::cout
snippet out
	cout << ${1} << endl;${0}

# std:cout space
snippet outs
	cout << ${1} << " " << ${2} << endl;
# std::cin
snippet cin
	cin >> ${1};${2}

#for Loop
snippet for
	for (int ${2:i} = 0; $2 < ${1:N}; $2${3:++}) {
		${4}
	}


# foreach
snippet fore
	for (${1:auto} ${2:i} : ${3:container}) {
		${4}
	}

# auto iterator
snippet iter
	for (auto ${1:i} = ${2:container}.begin(); $1 != $2.end(); ++$1) {
		${3:cout << *$1 << endl;}
	}

# scanf
snippet scanf
	scanf("%d", &${1:n});${0}

snippet class
	class ${1}{
		${0}
	};
